
call plug#begin('~/.nvim/plugged')

Plug 'https://github.com/godlygeek/tabular.git'
Plug 'https://github.com/mbbill/undotree.git'
Plug 'https://github.com/michaeljsmith/vim-indent-object.git'
Plug 'https://github.com/octol/vim-cpp-enhanced-highlight.git'
Plug 'https://github.com/scrooloose/nerdcommenter.git'
Plug 'https://github.com/tpope/vim-fugitive.git'
Plug 'https://github.com/tpope/vim-obsession.git'
Plug 'https://github.com/tpope/vim-repeat.git'
Plug 'https://github.com/tpope/vim-surround.git'
Plug 'https://github.com/tpope/vim-vinegar.git'
Plug 'https://github.com/vim-scripts/a.vim.git'

" TreeSitter related plugins
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'nvim-treesitter/playground'
Plug 'https://github.com/lewis6991/spellsitter.nvim.git'

" Fzf
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Colorscheme bundles
Plug 'https://github.com/flazz/vim-colorschemes.git'
Plug 'https://github.com/morhetz/gruvbox.git'
Plug 'https://github.com/sainnhe/everforest.git'
Plug 'sainnhe/gruvbox-material'
Plug 'luisiacc/gruvbox-baby'

" Cmp related plugins
Plug 'hrsh7th/cmp-buffer'
Plug 'hrsh7th/cmp-cmdline'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/cmp-path'
Plug 'hrsh7th/nvim-cmp'

" LSP
Plug 'neovim/nvim-lspconfig'
Plug 'onsails/lspkind.nvim'

" Telescope plugins
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'nvim-telescope/telescope-media-files.nvim'

" Neorg related
Plug 'folke/zen-mode.nvim'
Plug 'nvim-neorg/neorg-telescope'
Plug 'nvim-lua/popup.nvim'
Plug 'nvim-neorg/neorg', { 'branch': 'main' }

" For LLVM and MLIR Syntax files
Plug 'https://github.com/llvm/llvm-project.git', { 'rtp': 'mlir/utils/vim' }
Plug 'https://github.com/llvm/llvm-project.git', { 'as': 'llvm-project2', 'rtp': 'llvm/utils/vim' }

" For compiler explorer
Plug 'stevearc/dressing.nvim'
Plug 'krady21/compiler-explorer.nvim'

Plug 'nvim-lualine/lualine.nvim'
Plug 'rcarriga/nvim-notify'

Plug 'nvim-tree/nvim-web-devicons'
Plug 'phaazon/mind.nvim', { 'branch': 'v2.2' }

call plug#end()

" Tab settings
set autoindent
set smartindent
set expandtab
set tabstop=2
set shiftwidth=2
set conceallevel=0

set termguicolors

let g:everforest_background = 'hard'
let g:gruvbox_italics=1
let g:gruvbox_invert_selection=0
let g:gruvbox_contrast_dark='hard'
let g:gruvbox_contrast_light='medium'
let g:gruvbox_guisp_fallback='fg'

let g:gruvbox_material_foreground='original'
let g:gruvbox_material_background='hard'
let g:gruvbox_material_background='hard'
let g:gruvbox_material_enable_bold=1
let g:gruvbox_material_enable_italic=0

set background=dark
colorscheme gruvbox-material

" Search options
set hlsearch
set incsearch
set ignorecase
set smartcase
set inccommand=nosplit

set encoding=utf-8
set scrolloff=3
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell
set cursorline
set ruler
set backspace=indent,eol,start
set laststatus=2
set number
set virtualedit=all

set modelines=0
set wrap
set textwidth=90
set formatoptions=qrn1
set colorcolumn=90
set title
set lazyredraw
set splitright
set splitbelow

" Don't move the cursor to the first column during row traversals
set nostartofline

" Configure diff algorithm to be a little more ergonomic
set diffopt+=algorithm:histogram,indent-heuristic

" Backup & Undo settings
set undodir=~/.nvim/undodir//
set backupdir=~/.nvim/backup//
set undofile
set undolevels=1000
set undoreload=10000

set ssop-=options   " do not store global and local values in session
set ssop-=folds     " do not store folds in the session

" Navigation of folded lines
map j gj
map k gk

" Fold based on the syntax of the file, but only fold the outer level
set foldnestmax=1
set foldmethod=syntax

" Press Space to turn off highlighting and clear any message already displayed.
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>
nnoremap ' `
nnoremap ` '

" Remove menu
set go=c

" Faster way to switch between splits
map <leader>w <C-w>w
map <leader>h <C-w>h
map <leader>j <C-w>j
map <leader>k <C-w>k
map <leader>l <C-w>l

" Quick navigation of tabs
map <leader>th :tabprev<CR>
map <leader>tl :tabnext<CR>
map <leader>tn :tabnew<CR>
map <leader>td :tabclose<CR>

" Remove trailing whitespace
function! StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun

map <silent> <leader>s :call StripTrailingWhitespaces() <CR>

" Invoke telescope's live-grep
map <silent> <leader>ff :lua require('telescope.builtin').find_files() <CR>
map <silent> <leader>lg :lua require('telescope.builtin').live_grep() <CR>

" Complete options (disable preview scratch window)
set completeopt=menu,menuone,longest

" Limit popup menu height
set pumheight=15

" Key Maps
" --------
" Use Y to copy until the end of the line. Use yy to copy the whole line.
nnoremap Y y$

set statusline=
set statusline +=%1*\ %n\ %*            "buffer number
set statusline +=%5*%{&ff}%*            "file format
set statusline +=%3*%y%*                "file type
set statusline +=%4*\ %<%F%*            "full path
set statusline +=%2*%m%*                "modified flag
set statusline +=%1*%=%5l%*             "current line
set statusline +=%2*/%L%*               "total lines
set statusline +=%1*%6v\ %*             "virtual column number
set statusline +=%2*0x%04B\ %*          "character under cursor

set list
set listchars=tab:>-,trail:Â·,extends:>,precedes:<

" Interrobangs...
digraph !? 8253
digraph ?! 8253

set tags=./tags;

" Source the lua configuration
runtime config.lua
